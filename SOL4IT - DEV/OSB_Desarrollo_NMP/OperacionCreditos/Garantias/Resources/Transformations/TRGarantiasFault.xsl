<xsl:stylesheet version="1.0" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:nmpm="http://servicios.montedepiedad.com.mx/NMP/Schema/NMPStandardMessage" xmlns:ctx="http://www.bea.com/wli/sb/context" xmlns:ctx1="http://www.bea.com/wli/sb/stages/transform/config" xmlns:nmp="http://servicios.montedepiedad.com.mx/NMP/Service/Garantias">
  <xsl:include href="../../../../Common/XSLT/TemplateFaultsMontePiedadV2.xsl"/>
  <xsl:output indent="yes"/>
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source/>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets/>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [MON AUG 07 15:50:37 CDT 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="operacionServicio"/>
  <xsl:template match="/">
    <soap:Fault>
      <xsl:variable name="fault" select="ctx:fault"/>
      <xsl:variable name="beaCode" select="ctx:fault/ctx:errorCode"/>
      <xsl:variable name="sapCode" select="xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring)"/>
      <soap:Code>
        <soap:Value>soap:Receiver</soap:Value>
        <soap:Subcode>
          <soap:Value>nmp:GarantiasFault</soap:Value>
        </soap:Subcode>
      </soap:Code>
      <soap:Reason>
        <soap:Text xml:lang="es">
          <xsl:choose>
            <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
              <xsl:call-template name="faultstring">
                <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'USER_OSB-'))"/>
                <xsl:with-param name="serviceName" select="$operacionServicio"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
              <xsl:call-template name="faultstring">
                <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'OSB-'))"/>
                <xsl:with-param name="serviceName" select="$operacionServicio"/>
              </xsl:call-template>
            </xsl:otherwise>
          </xsl:choose>
        </soap:Text>
      </soap:Reason>
      <soap:Detail>
        <nmpm:messageError>
          <nmpm:codigoError>
            <xsl:choose>
              <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                <xsl:call-template name="codigoError">
                  <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'USER_OSB-'))"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="codigoError">
                  <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'OSB-'))"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </nmpm:codigoError>
          <nmpm:descripcionError>
            <xsl:choose>
              <xsl:when test="starts-with ($sapCode, &quot;EX&quot; )">
                <xsl:value-of select="concat('Se ha recibido un error del servicio SAP - ', $operacionServicio, ': ', $fault//*:Text/text())"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:choose>
                  <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                    <xsl:value-of select="$fault/ctx:reason"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="descripcionError">
                      <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'OSB-'))"/>
                      <xsl:with-param name="serviceName" select="$operacionServicio"/>
                      <xsl:with-param name="fault" select="$fault"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
          </nmpm:descripcionError>
          <nmpm:tipoError>
            <xsl:choose>
              <xsl:when test="starts-with ($sapCode, &quot;EX&quot; )">
                <xsl:text>Error de Aplicaci√≥n</xsl:text>
              </xsl:when>
              <xsl:otherwise>
                <xsl:choose>
                  <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                    <xsl:call-template name="tipoError">
                      <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'USER_OSB-'))"/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="tipoError">
                      <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'OSB-'))"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
          </nmpm:tipoError>
          <nmpm:severidad>
            <xsl:choose>
              <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                <xsl:call-template name="severidad">
                  <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'USER_OSB-'))"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="severidad">
                  <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, 'OSB-'))"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </nmpm:severidad>
        </nmpm:messageError>
      </soap:Detail>
    </soap:Fault>
  </xsl:template>
</xsl:stylesheet>