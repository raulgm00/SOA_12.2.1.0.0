<xsl:stylesheet version="1.0" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:nmpm="http://servicios.montedepiedad.com.mx/NMP/Schema/NMPStandardMessage" xmlns:nmp="http://servicios.montedepiedad.com.mx/NMP/Service/NMPAdministradorIdentidades" xmlns:ctx="http://www.bea.com/wli/sb/context" xmlns:ctx1="http://www.bea.com/wli/sb/stages/transform/config">
    <xsl:include href="../../../../Common/XSLT/TemplateFaultsMontePiedadV2.xsl"/>
    <xsl:include href="TRCognitoCatalogoErrores.xsl"/>
    <oracle-xsl-mapper:schema>
        <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
        <oracle-xsl-mapper:mapSources>
            <oracle-xsl-mapper:source/>
        </oracle-xsl-mapper:mapSources>
        <oracle-xsl-mapper:mapTargets>
            <oracle-xsl-mapper:target type="XSD">
                <oracle-xsl-mapper:schema location="../../../../Common/XSD/NMPStandardFault.xsd.xsd"/>
                <oracle-xsl-mapper:rootElement name="Fault" namespace="http://schemas.xmlsoap.org/soap/envelope/"/>
            </oracle-xsl-mapper:target>
        </oracle-xsl-mapper:mapTargets>
        <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [TUE JUN 27 12:28:19 CDT 2017].-->
    </oracle-xsl-mapper:schema>
    <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
    <xsl:param name="servicioConFallo"/>
    <xsl:param name="codigoAmazon"/>
    <xsl:param name="mensajeAmazon"/>
    <xsl:template match="/">
        <soap:Fault>
            <xsl:variable name="fault" select="ctx:fault"/>
            <xsl:variable name="beaCode" select="ctx:fault/ctx:errorCode"/>
            <faultcode>nmp:administradorIdentidadesFault</faultcode>
            <faultstring>
              <xsl:choose>
                <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                  <xsl:call-template name="faultstring">
                      <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;USER_OSB-&quot; ))"/>
                      <xsl:with-param name="serviceName" select="$servicioConFallo"/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:call-template name="faultstring">
                      <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;OSB-&quot; ))"/>
                      <xsl:with-param name="serviceName" select="$servicioConFallo"/>
                  </xsl:call-template>
                </xsl:otherwise>
              </xsl:choose>
            </faultstring>
            <detail>
                <nmpm:messageError>
                    <nmpm:codigoError>
                      <xsl:choose>
                        <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                          <xsl:call-template name="codigoError">
                              <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;USER_OSB-&quot; ))"/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:call-template name="codigoError">
                              <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;OSB-&quot; ))"/>
                          </xsl:call-template>
                        </xsl:otherwise>
                      </xsl:choose>
                    </nmpm:codigoError>
                    <nmpm:descripcionError>
                        <xsl:choose>
                            <xsl:when test="string-length($mensajeAmazon) > 0">
                                <xsl:call-template name="descripcionErrorCognito">
                                    <xsl:with-param name="recursoCognito" select="$servicioConFallo"/>
                                    <xsl:with-param name="codigoErrorCognito" select="$codigoAmazon"/>
                                </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$fault/ctx:java-exception/ctx:java-content">
                                        <xsl:value-of select="concat(substring ($fault/ctx:reason, 0, 1000), '...')"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:choose>
                                        <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                                          <xsl:value-of select="$fault/ctx:reason"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:call-template name="descripcionError">
                                              <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;OSB-&quot; ))"/>
                                              <xsl:with-param name="serviceName" select="$servicioConFallo"/>
                                              <xsl:with-param name="fault" select="$fault"/>
                                          </xsl:call-template>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </nmpm:descripcionError>
                    <nmpm:tipoError>
                      <xsl:choose>
                        <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                          <xsl:call-template name="tipoError">
                              <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;USER_OSB-&quot; ))"/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:call-template name="tipoError">
                              <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;OSB-&quot; ))"/>
                          </xsl:call-template>
                        </xsl:otherwise>
                      </xsl:choose>
                    </nmpm:tipoError>
                    <nmpm:severidad>
                      <xsl:choose>
                        <xsl:when test="starts-with ($beaCode, &quot;USER_OSB-&quot; )">
                          <xsl:call-template name="severidad">
                            <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;USER_OSB-&quot; ))"/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:call-template name="severidad">
                            <xsl:with-param name="errorCode" select="number(substring-after ($beaCode, &quot;OSB-&quot; ))"/>
                          </xsl:call-template>
                        </xsl:otherwise>
                      </xsl:choose>
                    </nmpm:severidad>
                </nmpm:messageError>
            </detail>
        </soap:Fault>
    </xsl:template>
</xsl:stylesheet>