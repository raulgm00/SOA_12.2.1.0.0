<xsl:stylesheet version="1.0" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:nmp="http://servicios.montedepiedad.com.mx/NMP/Schema/NMPStandardMessage" xmlns:ns0="http://servicios.montedepiedad.com.mx/NMP/Service/NMPCliente" xmlns:ctx="http://www.bea.com/wli/sb/context" xmlns:ctx1="http://www.bea.com/wli/sb/stages/transform/config">
  <xsl:include href="../../../../Common/XSLT/TemplateFaultsMontePiedad.xsl"/>
  <xsl:include href="TRBuroCreditoTemplateFaults.xsl"/>
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source/>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Common/XSD/NMPStandardFault.xsd.xsd"/>
        <oracle-xsl-mapper:rootElement name="Fault" namespace="http://schemas.xmlsoap.org/soap/envelope/"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [MON MAR 13 12:22:21 CST 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="OperacionSvc"/>
  <xsl:template match="/">
    <soap:Fault>
      <xsl:variable name="beaCode" select="number(substring-after (ctx:fault/ctx:errorCode, &quot;OSB-&quot; ))"/>
      <xsl:variable name="fault" select="ctx:fault"/>
      <faultcode>
        <xsl:choose>
          <xsl:when test="$OperacionSvc = 'getConsultaBC'">
            <xsl:value-of select="&quot;ns0:consultaBCFault&quot;"/>
          </xsl:when>
          <xsl:otherwise>
            <!--$OperacionSvc = 'getConsultaVigenteBC'-->
            <xsl:value-of select="ns0:consultaVigenteBCFault"/>
          </xsl:otherwise>
        </xsl:choose>
      </faultcode>
      <faultstring>
        <xsl:choose>
          <xsl:when test="starts-with(ctx:fault//*:detail/*:messageError/*:codigoError, 'NMP-')">
            <xsl:value-of select="ctx:fault//*:faultstring"/>
          </xsl:when>
           <xsl:when test="starts-with(ctx:fault/ctx:errorCode, 'EXP-NMP-')">
            <xsl:text>SOAP Fault Response. Ha ocurrido un error inesperado</xsl:text>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="faultstring">
              <xsl:with-param name="beaCode" select="$beaCode"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </faultstring>
      <detail>
        <nmp:messageError>
          <nmp:codigoError>
            <xsl:choose>
              <xsl:when test="starts-with(ctx:fault//*:detail/*:messageError/*:codigoError, 'NMP-')">
                <xsl:value-of select="ctx:fault//*:detail/*:messageError/*:codigoError"/>
              </xsl:when>
              <xsl:when test="starts-with(ctx:fault/ctx:errorCode, 'EXP-NMP-')">
                   <xsl:value-of select="substring-after(ctx:fault/ctx:errorCode, 'EXP-')"/>
              </xsl:when>
              <xsl:when test="$beaCode = '382500'">
                <xsl:choose>
                  <xsl:when test="$fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring">
                    <xsl:choose>
                      <xsl:when test="starts-with(xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring), 'EX' )">
                        <xsl:call-template name="codigoErrorSap">
                          <xsl:with-param name="ErrorSap" select="xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring)"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:call-template name="codigoError">
                          <xsl:with-param name="beaCode" select="$beaCode"/>
                        </xsl:call-template>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="codigoError">
                      <xsl:with-param name="beaCode" select="$beaCode"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="codigoError">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </nmp:codigoError>
          <nmp:descripcionError>
            <xsl:choose>
              <xsl:when test="starts-with(ctx:fault//*:detail/*:messageError/*:codigoError, 'NMP-')">
                <xsl:value-of select="ctx:fault//*:detail/*:messageError/*:descripcionError"/>
              </xsl:when>
              <xsl:when test="starts-with(ctx:fault/ctx:errorCode, 'EXP-NMP-')">
                   <xsl:value-of select="ctx:fault/ctx:reason"/>
              </xsl:when>
              <xsl:when test="$beaCode = '382500'">
                <xsl:choose>
                  <xsl:when test="$fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring">
                    <xsl:choose>
                      <xsl:when test="starts-with(xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring), 'EX' )">
                        <xsl:call-template name="descripcionErrorSap">
                          <xsl:with-param name="ErrorSap" select="xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring)"/>
                          <xsl:with-param name="fault" select="$fault"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:call-template name="descripcionError">
                          <xsl:with-param name="beaCode" select="$beaCode"/>
                          <xsl:with-param name="fault" select="$fault"/>
                        </xsl:call-template>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="descripcionError">
                      <xsl:with-param name="beaCode" select="$beaCode"/>
                      <xsl:with-param name="fault" select="$fault"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="descripcionError">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                  <xsl:with-param name="fault" select="$fault"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </nmp:descripcionError>
          <nmp:tipoError>
            <xsl:choose>
              <xsl:when test="starts-with(ctx:fault//*:detail/*:messageError/*:codigoError, 'NMP-')">
                <xsl:value-of select="ctx:fault//*:detail/*:messageError/*:tipoError"/>
              </xsl:when>
               <xsl:when test="starts-with(ctx:fault/ctx:errorCode, 'EXP-NMP-')">
                   <xsl:text>Error de Aplicaci√≥n</xsl:text>
              </xsl:when>
              <xsl:when test="$beaCode = '382500'">
                <xsl:choose>
                  <xsl:when test="$fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring">
                    <xsl:choose>
                      <xsl:when test="starts-with(xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring), 'EX' )">
                        <xsl:call-template name="tipoErrorSap">
                          <xsl:with-param name="ErrorSap" select="xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring)"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:call-template name="tipoError">
                          <xsl:with-param name="beaCode" select="$beaCode"/>
                        </xsl:call-template>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="tipoError">
                      <xsl:with-param name="beaCode" select="$beaCode"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="tipoError">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </nmp:tipoError>
          <nmp:severidad>
            <xsl:choose>
              <xsl:when test="starts-with(ctx:fault//*:detail/*:messageError/*:codigoError, 'NMP-')">
                <xsl:value-of select="ctx:fault//*:detail/*:messageError/*:severidad"/>
              </xsl:when>
              <xsl:when test="starts-with(ctx:fault/ctx:errorCode, 'EXP-NMP-')">
                   <xsl:text>1</xsl:text>
              </xsl:when>
              <xsl:when test="$beaCode = '382500'">
                <xsl:choose>
                  <xsl:when test="$fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring">
                    <xsl:choose>
                      <xsl:when test="starts-with(xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring), 'EX' )">
                        <xsl:call-template name="severidadSap">
                          <xsl:with-param name="ErrorSap" select="xp20:upper-case($fault/ctx:details/ctx1:ReceivedFaultDetail/ctx1:faultstring)"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:call-template name="severidad">
                          <xsl:with-param name="beaCode" select="$beaCode"/>
                        </xsl:call-template>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="severidad">
                      <xsl:with-param name="beaCode" select="$beaCode"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="severidad">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </nmp:severidad>
        </nmp:messageError>
      </detail>
    </soap:Fault>
  </xsl:template>
</xsl:stylesheet>