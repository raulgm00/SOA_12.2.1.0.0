<xsl:stylesheet version="1.0" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ctx soap UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:ctx="http://www.bea.com/wli/sb/context" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:quasm="http://servicios.qualitas.com.mx/QUA/Schema/QUAStandardMessage" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/QualitasGPABus/SolicitudesBDQry/SolicitudDataSvc" xmlns:con1="http://www.bea.com/wli/sb/stages/transform/config">
  <xsl:include href="../../../../../../../Commons/XSLT/TemplateFaultsQualitas.xsl"/>
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source/>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../../../../Commons/XSD/QualitasStandarFault.xsd"/>
        <oracle-xsl-mapper:rootElement name="Fault" namespace="http://schemas.xmlsoap.org/soap/envelope/"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [FRI JUN 30 11:51:56 CDT 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="app"/>
  <xsl:template match="/">
    <!--Creacion de variable APPCODE -->
    <xsl:variable name="appCode" select="substring-before(ctx:fault/ctx:errorCode,'-')"/>
    <!--Creacion de variable BEACODE-->
    <xsl:variable name="beaCode">
      <xsl:choose>
        <xsl:when test="$appCode != 'OSB'">
          <xsl:value-of select="substring-after(ctx:fault/ctx:errorCode,'-')"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="number(substring-after(ctx:fault/ctx:errorCode,concat($appCode,'-')))"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <!--Creacion de variable FAULTSTRING-->
    <xsl:variable name="faultstring">
      <xsl:choose>
        <xsl:when test="($appCode = 'OSB' and $beaCode = 382500) or  ($appCode = 'QAU')">
          <xsl:choose>
            <xsl:when test="$app = 1">
              <xsl:text>DB Error: Se genero un error en la consulta de la base de datos</xsl:text>
            </xsl:when>
            <xsl:when test="$app =0">
              <xsl:text>Error : Ocurrio un error</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="faultstring">
            <xsl:with-param name="beaCode" select="$beaCode"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <!-- Creacion de variable DESCRIPCION ERROR -->
    <xsl:variable name="descripcionError">
      <xsl:choose>
        <xsl:when test="$appCode = 'QUA'">
          <xsl:value-of select="substring(ctx:fault/ctx:reason,0,1500)"/>
        </xsl:when>
        <xsl:when test="$appCode = 'OSB'">
          <xsl:choose>
            <!-- Web Services -->
            <xsl:when test="contains(ctx:fault/ctx:details/con1:ReceivedFaultDetail/con1:faultcode,'operationErroredFault')">
              <xsl:value-of select="substring(ctx:fault/ctx:details/con1:ReceivedFaultDetail/con1:detail/ns0:errorInfo/ns0:errorMessage,0,500)"/>
            </xsl:when>
            <!-- JCA -->
            <xsl:when test="contains(ctx:fault/ctx:details/con1:ValidationFailureDetail/con1:message,'Expected element')">
              <xsl:value-of select="substring(ctx:fault/ctx:details/con1:ValidationFailureDetail/con1:message,0,500)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:call-template name="descripcionError">
                <xsl:with-param name="beaCode" select="$beaCode"/>
                <xsl:with-param name="fault" select="/ctx:fault"/>
              </xsl:call-template>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="substring(ctx:fault/ctx:details,0,1500)"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="codigoError">
    <xsl:choose>
            <!-- CUnaod el codigo es QUA ve a el Template de errores manejados -->
            <xsl:when test="$appCode = 'QUA'">
              <quasm:codigoError>
                <xsl:call-template name="codigoError">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                </xsl:call-template>
              </quasm:codigoError>
            </xsl:when>
            <!-- De lo contrario coloca el error en el servicio -->
            <xsl:otherwise>
              <xsl:value-of select="ctx:fault/ctx:errorCode"/>
            </xsl:otherwise>
          </xsl:choose>
    
    </xsl:variable>
    <soap:Fault>
      <soap:faultcode>sd:SolicitudDataFault</soap:faultcode>
      <soap:faultstring>
        <xsl:value-of select="$faultstring"/>
      </soap:faultstring>
      <soap:detail>
        <quasm:messageError>
              <quasm:codigoError>
                <xsl:value-of select="$codigoError"/>
              </quasm:codigoError>
              <quasm:descripcionError>
                <xsl:value-of select="$descripcionError"/>
              </quasm:descripcionError>
              <quasm:tipoError>
                <xsl:call-template name="tipoError">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                </xsl:call-template>
              </quasm:tipoError>
              <quasm:severidad>
                <xsl:call-template name="severidad">
                  <xsl:with-param name="beaCode" select="$beaCode"/>
                </xsl:call-template>
              </quasm:severidad>
        </quasm:messageError>
      </soap:detail>
    </soap:Fault>
  </xsl:template>
</xsl:stylesheet>